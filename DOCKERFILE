# Step 1: Build the React frontend
FROM node:22 AS frontend-build

# Create a user and switch to that user
RUN useradd -ms /bin/bash myuser
USER myuser

# Set working directory for frontend
WORKDIR /app/frontend

# Copy the frontend package files
COPY ["electron-react-frontend", "./electron-react-frontend"]

# Install dependencies
RUN npm install

USER root
RUN chown root node_modules/electron/dist/chrome-sandbox
RUN chmod 4755 node_modules/electron/dist/chrome-sandbox

# Build the React app
#RUN npm run build

# Step 2: Build and run the Django backend
FROM python:3.12 AS backend-build

# Set working directory for backend
WORKDIR /app/backend

# Copy the backend requirements file
COPY ["backend", "./backend"]

# Install dependencies
#RUN pip install --no-cache-dir -r requirements.txt
RUN python -m pip install -r requirements.txt --break-system-packages

RUN apt-get update \
    && apt-get install -y libdbus-1-3 \
    && apt-get install -y libatk1.0-0 \
    && apt-get install -y libatk-bridge2.0-0 \
    && apt-get install -y libcups2 \
    && apt-get install -y libgtk-3-0 \
    && apt-get install -y libgbm1 \
    && apt-get install -y libasound2 \
    && apt-get install -y dbus-x11

# Step 3: Combine the builds and serve the application
#FROM python:3.12

# Set working directory
#WORKDIR /app

# Copy the built React frontend
#COPY --from=frontend-build /app/frontend/build ./frontend/build

# Copy the Django backend
#COPY --from=backend-build /app/backend ./

# Set environment variables
#ENV DJANGO_SETTINGS_MODULE=your_django_app.settings

# Collect static files
#RUN python manage.py collectstatic --noinput
#RUN python manage.py runserver

# Expose the ports
EXPOSE 8000

# Start the backend server
#CMD ["sh", "-c", "python manage.py runserver 0.0.0.0:8000"]