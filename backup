FROM ubuntu:jammy

ARG DEBIAN_FRONTEND=noninteractive

ENV NVM_DIR /root/.nvm
ENV NODE_VERSION 22.9.0

# Add Node.js and npm to path so the commands are available
ENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
ENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

RUN apt-get update \
    && apt-get install -y curl  \
    #&& apt-get install -y wine32 \
    #&& apt-get install -y mono-complete \
    && curl -fsSL https://deb.nodesource.com/setup_$NODE_VERSION.x.x  | bash - \
    && apt-get install -y nodejs \
    && apt-get install -y python3 \
    && apt-get install -y python3-pip \
    && apt-get install -y git \
    && apt-get clean

RUN rm -rf /var/lib/apt/lists/*

# Install nvm - nodejs version manager
# Manages installation of nodejs and corresponding npm version
#RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash

# Install Node.js and npm
#RUN . "$NVM_DIR/nvm.sh" && nvm install $NODE_VERSION && nvm alias default $NODE_VERSION && nvm use default

# Intentionally not using npm install -g npm@latest
# Not sure if this breaks nodejs - npm relation in future updates
#RUN npm install -g npm@10.8.2

# Install python3 and conan version 2
RUN python3 -m pip install conan --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org

# Create directory and set as entry point when connecting to container
WORKDIR /workspace

# Folders
COPY ["backend", "./backend"]
COPY ["electron-react-frontend", "./electron-react-frontend"]

#RUN npm install /workspace/electron-react-frontend/

## Specify the base image
#FROM node:alpine
## Set the working directory
#WORKDIR /app
## Copy the package.json and package-lock.json files
#COPY package*.json ./
## Install the dependencies
#RUN npm install
## Copy the app files
#COPY . .
## Build the app
#RUN npm run build
## Expose the port
#EXPOSE 5173
## Run the app
#CMD ["npm", "start"]